[mypage::header "HTML/Tcl Templates"]
<p>
A Tcl template works by mixing Tcl code into normal HTML pages.
The server uses the Tcl subst command to replace the Tcl code and
variable references with their results and values.
For example, the version of the Tcl server is:
<blockquote>[Httpd_Version]</blockquote>
<p>
This is obtained with \[Httpd_Version\] in the page.
<p>The time this page was generated is:
<blockquote>[clock format [clock seconds]]</blockquote>

<ul>
<li><a href=faqfaq.html>FAQ Generator</a> example that illustrates
how to use
the <tt>faq</tt> module in the sample libtml directory.
<li><a HREF="simple.subst">Simple Tcl template</a>.  If you have a file
that ends with ".subst", then it is processed every time the page is
fetched.
<li>A ".tml" file can be used just like .subst in that if you ask for
"page.tml" it will be processed.
However, if the link is instead to "page.html", then the .html version
is only generated if the corresponding .tml file is newer, or if
any of the .tml files in the directory tree above the file are newer.
The results of processing the .tml are cached in the .html file.
<li>The Doc_CheckTemplates command is used to enable template checking for
every .html  file in your hierarchy.  This way you can have links to
.html files,  but have the server check for corresponding .tml template files.
</ul>

<h2><a href="form.tml">Templates with Form Data</a></h2>
If you want to process query data, it is available via the <b>ncgi</b>
interface, and indirectly via the <b>html</b> interface used
to create form elements.

[mypage::footer]
